// https://github.com/topojson/topojson-client Version 2.0.1. Copyright 2016 Mike Bostock.
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(n.topojson=n.topojson||{})}(this,function(n){"use strict";function t(n,t){return{type:"Feature",id:null==t.id?void 0:t.id,properties:null==t.properties?{}:t.properties,geometry:e(n,t)}}function e(n,t){function e(n,t){t.length&&t.pop();for(var e=l[n<0?~n:n],r=0,o=e.length;r<o;++r)t.push(s(e[r].slice(),r));n<0&&i(t,o)}function r(n){return s(n.slice())}function o(n){for(var t=[],r=0,o=n.length;r<o;++r)e(n[r],t);return t.length<2&&t.push(t[0].slice()),t}function a(n){for(var t=o(n);t.length<4;)t.push(t[0].slice());return t}function c(n){return n.map(a)}function u(n){var t,e=n.type;switch(e){case"GeometryCollection":return{type:e,geometries:n.geometries.map(u)};case"Point":t=r(n.coordinates);break;case"MultiPoint":t=n.coordinates.map(r);break;case"LineString":t=o(n.arcs);break;case"MultiLineString":t=n.arcs.map(o);break;case"Polygon":t=c(n.arcs);break;case"MultiPolygon":t=n.arcs.map(c);break;default:return null}return{type:e,coordinates:t}}var s=f(n),l=n.arcs;return u(t)}function r(n,t,e){var r,a,c;if(arguments.length>1)r=o(n,t,e);else for(a=0,r=new Array(c=n.arcs.length);a<c;++a)r[a]=a;return{type:"MultiLineString",arcs:l(n,r)}}function o(n,t,e){function r(n){var t=n<0?~n:n;(s[t]||(s[t]=[])).push({i:n,g:u})}function o(n){n.forEach(r)}function a(n){n.forEach(o)}function c(n){n.forEach(a)}function i(n){switch(u=n,n.type){case"GeometryCollection":n.geometries.forEach(i);break;case"LineString":o(n.arcs);break;case"MultiLineString":case"Polygon":a(n.arcs);break;case"MultiPolygon":c(n.arcs)}}var u,f=[],s=[];return i(t),s.forEach(null==e?function(n){f.push(n[0].i)}:function(n){e(n[0].g,n[n.length-1].g)&&f.push(n[0].i)}),f}function a(n){for(var t,e=-1,r=n.length,o=n[r-1],a=0;++e<r;)t=o,o=n[e],a+=t[0]*o[1]-t[1]*o[0];return Math.abs(a)}function c(n,t){function r(n){switch(n.type){case"GeometryCollection":n.geometries.forEach(r);break;case"Polygon":o(n.arcs);break;case"MultiPolygon":n.arcs.forEach(o)}}function o(n){n.forEach(function(t){t.forEach(function(t){(i[t=t<0?~t:t]||(i[t]=[])).push(n)})}),u.push(n)}function c(t){return a(e(n,{type:"Polygon",arcs:[t]}).coordinates[0])}var i={},u=[],f=[];return t.forEach(r),u.forEach(function(n){if(!n._){var t=[],e=[n];for(n._=1,f.push(t);n=e.pop();)t.push(n),n.forEach(function(n){n.forEach(function(n){i[n<0?~n:n].forEach(function(n){n._||(n._=1,e.push(n))})})})}}),u.forEach(function(n){delete n._}),{type:"MultiPolygon",arcs:f.map(function(t){var e,r=[];if(t.forEach(function(n){n.forEach(function(n){n.forEach(function(n){i[n<0?~n:n].length<2&&r.push(n)})})}),r=l(n,r),(e=r.length)>1)for(var o,a,u=1,f=c(r[0]);u<e;++u)(o=c(r[u]))>f&&(a=r[0],r[0]=r[u],r[u]=a,f=o);return r})}}var i=function(n,t){for(var e,r=n.length,o=r-t;o<--r;)e=n[o],n[o++]=n[r],n[r]=e},u=function(n){return n},f=function(n){if(null==(t=n.transform))return u;var t,e,r,o=t.scale[0],a=t.scale[1],c=t.translate[0],i=t.translate[1];return function(n,t){return t||(e=r=0),n[0]=(e+=n[0])*o+c,n[1]=(r+=n[1])*a+i,n}},s=function(n,e){return"GeometryCollection"===e.type?{type:"FeatureCollection",features:e.geometries.map(function(e){return t(n,e)})}:t(n,e)},l=function(n,t){function e(t){var e,r=n.arcs[t<0?~t:t],o=r[0];return n.transform?(e=[0,0],r.forEach(function(n){e[0]+=n[0],e[1]+=n[1]})):e=r[r.length-1],t<0?[e,o]:[o,e]}function r(n,t){for(var e in n){var r=n[e];delete t[r.start],delete r.start,delete r.end,r.forEach(function(n){o[n<0?~n:n]=1}),i.push(r)}}var o={},a={},c={},i=[],u=-1;return t.forEach(function(e,r){var o,a=n.arcs[e<0?~e:e];a.length<3&&!a[1][0]&&!a[1][1]&&(o=t[++u],t[u]=e,t[r]=o)}),t.forEach(function(n){var t,r,o=e(n),i=o[0],u=o[1];if(t=c[i])if(delete c[t.end],t.push(n),t.end=u,r=a[u]){delete a[r.start];var f=r===t?t:t.concat(r);a[f.start=t.start]=c[f.end=r.end]=f}else a[t.start]=c[t.end]=t;else if(t=a[u])if(delete a[t.start],t.unshift(n),t.start=i,r=c[i]){delete c[r.end];var s=r===t?t:r.concat(t);a[s.start=r.start]=c[s.end=t.end]=s}else a[t.start]=c[t.end]=t;else t=[n],a[t.start=i]=c[t.end=u]=t}),r(c,a),r(a,c),t.forEach(function(n){o[n<0?~n:n]||i.push([n])}),i},h=function(n){return e(n,r.apply(this,arguments))},p=function(n){return e(n,c.apply(this,arguments))},g=function(n,t){for(var e=0,r=n.length;e<r;){var o=e+r>>>1;n[o]<t?e=o+1:r=o}return e},d=function(n){function t(n,t){n.forEach(function(n){n<0&&(n=~n);var e=o[n];e?e.push(t):o[n]=[t]})}function e(n,e){n.forEach(function(n){t(n,e)})}function r(n,t){"GeometryCollection"===n.type?n.geometries.forEach(function(n){r(n,t)}):n.type in c&&c[n.type](n.arcs,t)}var o={},a=n.map(function(){return[]}),c={LineString:t,MultiLineString:e,Polygon:e,MultiPolygon:function(n,t){n.forEach(function(n){e(n,t)})}};n.forEach(r);for(var i in o)for(var u=o[i],f=u.length,s=0;s<f;++s)for(var l=s+1;l<f;++l){var h,p=u[s],d=u[l];(h=a[p])[i=g(h,d)]!==d&&h.splice(i,0,d),(h=a[d])[i=g(h,p)]!==p&&h.splice(i,0,p)}return a},y=function(n){if(null==(t=n.transform))return u;var t,e,r,o=t.scale[0],a=t.scale[1],c=t.translate[0],i=t.translate[1];return function(n,t){t||(e=r=0);var u=Math.round((n[0]-c)/o),f=Math.round((n[1]-i)/a);return n[0]=u-e,e=u,n[1]=f-r,r=f,n}};n.feature=s,n.mesh=h,n.meshArcs=r,n.merge=p,n.mergeArcs=c,n.neighbors=d,n.transform=f,n.untransform=y,Object.defineProperty(n,"__esModule",{value:!0})});